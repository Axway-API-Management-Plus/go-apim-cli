/*
 * API Manager API v1.3
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.3.0
 * Contact: support@axway.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package apimgr
// Swagger A Swagger API definition.
type Swagger struct {
	// An identifier
	Id string `json:"id,omitempty"`
	// Schema title
	Title string `json:"title,omitempty"`
	// Description of the Schema
	Description string `json:"description,omitempty"`
	// The format ex: int32, int64, float, double, byte, binary, date, date-time or password
	Format string `json:"format,omitempty"`
	// Specifies if the parameter is required
	Required []string `json:"required,omitempty"`
	// Not used beacause our model does not support inline nested types
	Properties map[string]SchemaObject `json:"properties,omitempty"`
	Items SchemaObject `json:"items,omitempty"`
	// if the schema is an array specifies the items type
	Example map[string]interface{} `json:"example,omitempty"`
	Discriminator string `json:"discriminator,omitempty"`
	// The API version
	ApiVersion string `json:"apiVersion,omitempty"`
	// The Swagger version
	SwaggerVersion string `json:"swaggerVersion,omitempty"`
	// The base path
	BasePath string `json:"basePath,omitempty"`
	// The resource path hosted
	ResourcePath string `json:"resourcePath,omitempty"`
	// The models/schema for the API
	Models map[string]map[string]interface{} `json:"models,omitempty"`
	// The content types that the API consumes
	Consumes []string `json:"consumes,omitempty"`
	// The content types that the API produces
	Produces []string `json:"produces,omitempty"`
	// The Authorization schemes provided for this API
	Authorizations map[string]Authorization `json:"authorizations,omitempty"`
	// The name of the API
	Name string `json:"name,omitempty"`
	// Brief summary of the API.
	Summary string `json:"summary,omitempty"`
	SecurityProfile SwaggerSecurityProfile `json:"securityProfile,omitempty"`
	// Array of basePaths supported for this API/service, based on the configured ports
	BasePaths []string `json:"basePaths,omitempty"`
	// API image URL
	Image string `json:"image,omitempty"`
	// The state of the API.  Possible values: 'pending', 'unpublished', or 'published'.
	State string `json:"state,omitempty"`
	// Indicates that the API is CORS enabled
	Cors bool `json:"cors,omitempty"`
	// Indicates that the API is expired.
	Expired bool `json:"expired,omitempty"`
	// Indicates that the API is deprecated.  If 'true', then the API may have a 'retirementDate'.
	Deprecated bool `json:"deprecated,omitempty"`
	// Indicates that the API is deprecated and will be retired on the supplied date (in milliseconds).
	RetirementDate int64 `json:"retirementDate,omitempty"`
	// The list of tags associated with this API. Each tag can have multiple values
	Tags map[string][]string `json:"tags,omitempty"`
	// The documentation URL for the operation
	DocumentationUrl string `json:"documentationUrl,omitempty"`
	// The schema definitions that this API supports and links to those definitions.
	AvailableApiDefinitions map[string]string `json:"availableApiDefinitions,omitempty"`
	// The SDK downloads that this API supports and links to those downloads.
	AvailableSDK map[string]string `json:"availableSDK,omitempty"`
	// The API resources
	Apis []Api `json:"apis,omitempty"`
	// A Reference to a definition on definitions object
	Ref string `json:"$ref,omitempty"`
	// Default value for this schema if it is applicable
	Default map[string]interface{} `json:"default,omitempty"`
	// The resource type. Possible values: 'rest', 'wsdl'
	Type string `json:"type,omitempty"`
	Enum []string `json:"enum,omitempty"`
}
